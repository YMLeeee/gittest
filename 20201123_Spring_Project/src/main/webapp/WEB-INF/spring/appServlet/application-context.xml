<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
	
	<!-- properties 파일 연결 -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:properties/db.properties</value>
			</list>
		</property>
	</bean>
	
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${driver}"/>
		<property name="url" value="${url}"/>
		<property name="username" value="${username}"/>
		<property name="password" value="${password}"/>
	</bean>
	
	<!-- MyBatis의 SqlSessionFactory 객체 bean으로 생성 -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="configLocation" value="/WEB-INF/spring/sqls/Configuration.xml"/>
	</bean>
	
	<!-- SqlSessionFactory bean을 사용하기 위한 Template 설정 
		id는 DI를 통해서 사용할 객체의 이름 @Autowired 사용 예정
	-->
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSession"/>
	</bean>
	
	<!-- Transaction 처리 annotaion으로 tx처리 @Transactional-->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<!-- AOP를 통한 Transaction처리 -->
	<!-- 시나리오는 dao를 조합해서 service를 만듬 , 서비스는 독립된 기능 (DAO 독립된 기능),
		서비스 안에 dao가 있다면 실행은 dao가 모두 실행된 후 서비스가 실행
		IoC 서비스에 포함되어 있는 dao가 예외가 발생한다면 service에 포함됨 모든 dao를 rollback 해주겠다
	 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*" propagation="REQUIRED" rollback-for="Exception"/>
		</tx:attributes>
	</tx:advice>
	
	<aop:config>
		<aop:advisor advice-ref="txAdvice"
		pointcut="execution(* com.min.edu.model.*Service*.*(..))"/>
	</aop:config>
	
</beans>



